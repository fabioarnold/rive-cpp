const std = @import("std");

pub fn build(b: *std.build.Builder) void {
    const target = b.standardTargetOptions(.{});
    const mode = b.standardReleaseOptions();

    const viewer_mac = b.addStaticLibrary("viewer_mac", null);
    viewer_mac.addIncludePath("dependencies/macosx/cache/sokol");
    viewer_mac.addIncludePath("viewer/include");
    viewer_mac.addCSourceFiles(&.{
        "viewer/src/platform/viewer_gl.mm",
        "viewer/src/platform/viewer_mac.m",
    }, &.{});
    viewer_mac.linkFramework("Cocoa");
    viewer_mac.linkFramework("OpenGL");
    viewer_mac.defineCMacro("SOKOL_GLCORE33", null);

    const libtess2 = b.addStaticLibrary("tess2", null);
    libtess2.addIncludePath("dependencies/macosx/cache/libtess2/Include");
    libtess2.addCSourceFiles(&.{
        "dependencies/macosx/cache/libtess2/Source/bucketalloc.c",
        "dependencies/macosx/cache/libtess2/Source/dict.c",
        "dependencies/macosx/cache/libtess2/Source/geom.c",
        "dependencies/macosx/cache/libtess2/Source/mesh.c",
        "dependencies/macosx/cache/libtess2/Source/priorityq.c",
        "dependencies/macosx/cache/libtess2/Source/sweep.c",
        "dependencies/macosx/cache/libtess2/Source/tess.c",
    }, &.{});

    const viewer = b.addExecutable("viewer", null);
    viewer.setTarget(target);
    viewer.setBuildMode(mode);
    viewer.linkLibrary(viewer_mac);
    viewer.linkLibrary(libtess2);
    viewer.linkSystemLibrary("libpng");
    // viewer.linkLibC();
    viewer.linkLibCpp();
    viewer.addIncludePath("include");
    viewer.addIncludePath("dependencies/macosx/cache/imgui");
    viewer.addIncludePath("dependencies/macosx/cache/sokol");
    viewer.addIncludePath("dependencies/macosx/cache/earcut.hpp/include/mapbox");
    viewer.addIncludePath("dependencies/macosx/cache/libtess2/Include");
    viewer.addIncludePath("tess/include");
    viewer.addIncludePath("viewer/include");
    viewer.addCSourceFiles(&.{
        "src/animation/animation_state_instance.cpp",
        "src/animation/animation_state.cpp",
        "src/animation/blend_animation_1d.cpp",
        "src/animation/blend_animation_direct.cpp",
        "src/animation/blend_animation.cpp",
        "src/animation/blend_state_1d_instance.cpp",
        "src/animation/blend_state_1d.cpp",
        "src/animation/blend_state_direct_instance.cpp",
        "src/animation/blend_state_direct.cpp",
        "src/animation/blend_state_transition.cpp",
        "src/animation/blend_state.cpp",
        "src/animation/cubic_interpolator.cpp",
        "src/animation/keyed_object.cpp",
        "src/animation/keyed_property.cpp",
        "src/animation/keyframe_bool.cpp",
        "src/animation/keyframe_color.cpp",
        "src/animation/keyframe_double.cpp",
        "src/animation/keyframe_id.cpp",
        "src/animation/keyframe.cpp",
        "src/animation/layer_state.cpp",
        "src/animation/linear_animation_instance.cpp",
        "src/animation/linear_animation.cpp",
        "src/animation/listener_action.cpp",
        "src/animation/listener_align_target.cpp",
        "src/animation/listener_bool_change.cpp",
        "src/animation/listener_input_change.cpp",
        "src/animation/listener_number_change.cpp",
        "src/animation/listener_trigger_change.cpp",
        "src/animation/nested_animation.cpp",
        "src/animation/nested_linear_animation.cpp",
        "src/animation/nested_remap_animation.cpp",
        "src/animation/nested_simple_animation.cpp",
        "src/animation/nested_state_machine.cpp",
        "src/animation/state_instance.cpp",
        "src/animation/state_machine_input_instance.cpp",
        "src/animation/state_machine_input.cpp",
        "src/animation/state_machine_instance.cpp",
        "src/animation/state_machine_layer.cpp",
        "src/animation/state_machine_listener.cpp",
        "src/animation/state_machine.cpp",
        "src/animation/state_transition.cpp",
        "src/animation/system_state_instance.cpp",
        "src/animation/transition_bool_condition.cpp",
        "src/animation/transition_condition.cpp",
        "src/animation/transition_number_condition.cpp",
        "src/animation/transition_trigger_condition.cpp",
        "src/artboard.cpp",
        "src/assets/file_asset_contents.cpp",
        "src/assets/file_asset.cpp",
        "src/assets/image_asset.cpp",
        "src/bones/bone.cpp",
        "src/bones/root_bone.cpp",
        "src/bones/skin.cpp",
        "src/bones/skinnable.cpp",
        "src/bones/tendon.cpp",
        "src/bones/weight.cpp",
        "src/component.cpp",
        "src/constraints/constraint.cpp",
        "src/constraints/distance_constraint.cpp",
        "src/constraints/ik_constraint.cpp",
        "src/constraints/rotation_constraint.cpp",
        "src/constraints/scale_constraint.cpp",
        "src/constraints/targeted_constraint.cpp",
        "src/constraints/transform_constraint.cpp",
        "src/constraints/translation_constraint.cpp",
        "src/core/binary_reader.cpp",
        "src/core/field_types/core_bool_type.cpp",
        "src/core/field_types/core_bytes_type.cpp",
        "src/core/field_types/core_color_type.cpp",
        "src/core/field_types/core_double_type.cpp",
        "src/core/field_types/core_string_type.cpp",
        "src/core/field_types/core_uint_type.cpp",
        "src/dependency_sorter.cpp",
        "src/draw_rules.cpp",
        "src/draw_target.cpp",
        "src/drawable.cpp",
        "src/factory.cpp",
        "src/file.cpp",
        "src/generated/animation/animation_base.cpp",
        "src/generated/animation/animation_state_base.cpp",
        "src/generated/animation/any_state_base.cpp",
        "src/generated/animation/blend_animation_1d_base.cpp",
        "src/generated/animation/blend_animation_direct_base.cpp",
        "src/generated/animation/blend_state_1d_base.cpp",
        "src/generated/animation/blend_state_direct_base.cpp",
        "src/generated/animation/blend_state_transition_base.cpp",
        "src/generated/animation/cubic_interpolator_base.cpp",
        "src/generated/animation/entry_state_base.cpp",
        "src/generated/animation/exit_state_base.cpp",
        "src/generated/animation/keyed_object_base.cpp",
        "src/generated/animation/keyed_property_base.cpp",
        "src/generated/animation/keyframe_bool_base.cpp",
        "src/generated/animation/keyframe_color_base.cpp",
        "src/generated/animation/keyframe_double_base.cpp",
        "src/generated/animation/keyframe_id_base.cpp",
        "src/generated/animation/linear_animation_base.cpp",
        "src/generated/animation/listener_align_target_base.cpp",
        "src/generated/animation/listener_bool_change_base.cpp",
        "src/generated/animation/listener_number_change_base.cpp",
        "src/generated/animation/listener_trigger_change_base.cpp",
        "src/generated/animation/nested_bool_base.cpp",
        "src/generated/animation/nested_number_base.cpp",
        "src/generated/animation/nested_remap_animation_base.cpp",
        "src/generated/animation/nested_simple_animation_base.cpp",
        "src/generated/animation/nested_state_machine_base.cpp",
        "src/generated/animation/nested_trigger_base.cpp",
        "src/generated/animation/state_machine_base.cpp",
        "src/generated/animation/state_machine_bool_base.cpp",
        "src/generated/animation/state_machine_layer_base.cpp",
        "src/generated/animation/state_machine_listener_base.cpp",
        "src/generated/animation/state_machine_number_base.cpp",
        "src/generated/animation/state_machine_trigger_base.cpp",
        "src/generated/animation/state_transition_base.cpp",
        "src/generated/animation/transition_bool_condition_base.cpp",
        "src/generated/animation/transition_number_condition_base.cpp",
        "src/generated/animation/transition_trigger_condition_base.cpp",
        "src/generated/artboard_base.cpp",
        "src/generated/assets/file_asset_contents_base.cpp",
        "src/generated/assets/folder_base.cpp",
        "src/generated/assets/image_asset_base.cpp",
        "src/generated/backboard_base.cpp",
        "src/generated/bones/bone_base.cpp",
        "src/generated/bones/cubic_weight_base.cpp",
        "src/generated/bones/root_bone_base.cpp",
        "src/generated/bones/skin_base.cpp",
        "src/generated/bones/tendon_base.cpp",
        "src/generated/bones/weight_base.cpp",
        "src/generated/constraints/distance_constraint_base.cpp",
        "src/generated/constraints/ik_constraint_base.cpp",
        "src/generated/constraints/rotation_constraint_base.cpp",
        "src/generated/constraints/scale_constraint_base.cpp",
        "src/generated/constraints/transform_constraint_base.cpp",
        "src/generated/constraints/translation_constraint_base.cpp",
        "src/generated/draw_rules_base.cpp",
        "src/generated/draw_target_base.cpp",
        "src/generated/nested_artboard_base.cpp",
        "src/generated/node_base.cpp",
        "src/generated/shapes/clipping_shape_base.cpp",
        "src/generated/shapes/contour_mesh_vertex_base.cpp",
        "src/generated/shapes/cubic_asymmetric_vertex_base.cpp",
        "src/generated/shapes/cubic_detached_vertex_base.cpp",
        "src/generated/shapes/cubic_mirrored_vertex_base.cpp",
        "src/generated/shapes/ellipse_base.cpp",
        "src/generated/shapes/image_base.cpp",
        "src/generated/shapes/mesh_base.cpp",
        "src/generated/shapes/mesh_vertex_base.cpp",
        "src/generated/shapes/paint/fill_base.cpp",
        "src/generated/shapes/paint/gradient_stop_base.cpp",
        "src/generated/shapes/paint/linear_gradient_base.cpp",
        "src/generated/shapes/paint/radial_gradient_base.cpp",
        "src/generated/shapes/paint/solid_color_base.cpp",
        "src/generated/shapes/paint/stroke_base.cpp",
        "src/generated/shapes/paint/trim_path_base.cpp",
        "src/generated/shapes/points_path_base.cpp",
        "src/generated/shapes/polygon_base.cpp",
        "src/generated/shapes/rectangle_base.cpp",
        "src/generated/shapes/shape_base.cpp",
        "src/generated/shapes/star_base.cpp",
        "src/generated/shapes/straight_vertex_base.cpp",
        "src/generated/shapes/triangle_base.cpp",
        "src/hittest_command_path.cpp",
        "src/importers/artboard_importer.cpp",
        "src/importers/backboard_importer.cpp",
        "src/importers/file_asset_importer.cpp",
        "src/importers/keyed_object_importer.cpp",
        "src/importers/keyed_property_importer.cpp",
        "src/importers/layer_state_importer.cpp",
        "src/importers/linear_animation_importer.cpp",
        "src/importers/state_machine_importer.cpp",
        "src/importers/state_machine_layer_importer.cpp",
        "src/importers/state_machine_listener_importer.cpp",
        "src/importers/state_transition_importer.cpp",
        "src/layout.cpp",
        "src/math/aabb.cpp",
        "src/math/contour_measure.cpp",
        "src/math/hit_test.cpp",
        "src/math/mat2d_find_max_scale.cpp",
        "src/math/mat2d.cpp",
        "src/math/raw_path_utils.cpp",
        "src/math/raw_path.cpp",
        "src/math/vec2d.cpp",
        "src/nested_artboard.cpp",
        "src/node.cpp",
        "src/renderer.cpp",
        "src/rive_counter.cpp",
        "src/scene.cpp",
        "src/shapes/clipping_shape.cpp",
        "src/shapes/cubic_asymmetric_vertex.cpp",
        "src/shapes/cubic_detached_vertex.cpp",
        "src/shapes/cubic_mirrored_vertex.cpp",
        "src/shapes/cubic_vertex.cpp",
        "src/shapes/ellipse.cpp",
        "src/shapes/image.cpp",
        "src/shapes/mesh_vertex.cpp",
        "src/shapes/mesh.cpp",
        "src/shapes/metrics_path.cpp",
        "src/shapes/paint/color.cpp",
        "src/shapes/paint/fill.cpp",
        "src/shapes/paint/gradient_stop.cpp",
        "src/shapes/paint/linear_gradient.cpp",
        "src/shapes/paint/radial_gradient.cpp",
        "src/shapes/paint/shape_paint_mutator.cpp",
        "src/shapes/paint/shape_paint.cpp",
        "src/shapes/paint/solid_color.cpp",
        "src/shapes/paint/stroke.cpp",
        "src/shapes/paint/trim_path.cpp",
        "src/shapes/parametric_path.cpp",
        "src/shapes/path_composer.cpp",
        "src/shapes/path_vertex.cpp",
        "src/shapes/path.cpp",
        "src/shapes/points_path.cpp",
        "src/shapes/polygon.cpp",
        "src/shapes/rectangle.cpp",
        "src/shapes/shape_paint_container.cpp",
        "src/shapes/shape.cpp",
        "src/shapes/star.cpp",
        "src/shapes/straight_vertex.cpp",
        "src/shapes/triangle.cpp",
        "src/shapes/vertex.cpp",
        "src/simple_array.cpp",
        "src/text/font_hb.cpp",
        "src/text/line_breaker.cpp",
        "src/transform_component.cpp",
        "src/world_transform_component.cpp",

        "utils/no_op_factory.cpp",
        "utils/rive_utf.cpp",

        "viewer/src/platform/imgui_sokol_impl.cpp",
        "viewer/src/sample_tools/sample_atlas_packer.cpp",
        "viewer/src/tess/bitmap_decoder.cpp",
        "viewer/src/tess/decode_png.cpp",
        "viewer/src/tess/tess_host.cpp",
        "viewer/src/tess/viewer_sokol_factory.cpp",
        "viewer/src/viewer_content/image_content.cpp",
        "viewer/src/viewer_content/scene_content.cpp",
        "viewer/src/viewer_content/text_content.cpp",
        "viewer/src/viewer_content/textpath_content.cpp",
        "viewer/src/viewer_content/trimpath_content.cpp",
        "viewer/src/viewer_content/viewer_content.cpp",
        "viewer/src/stats.cpp",
        "viewer/src/viewer.cpp",

        "tess/src/math/mat4.cpp",
        "tess/src/sokol/sokol_factory.cpp",
        "tess/src/sokol/sokol_tess_renderer.cpp",
        "tess/src/contour_stroke.cpp",
        "tess/src/segmented_contour.cpp",
        "tess/src/sub_path.cpp",
        "tess/src/tess_render_path.cpp",
        "tess/src/tess_renderer.cpp",

        "dependencies/macosx/cache/imgui/imgui_draw.cpp",
        "dependencies/macosx/cache/imgui/imgui_tables.cpp",
        "dependencies/macosx/cache/imgui/imgui_widgets.cpp",
        "dependencies/macosx/cache/imgui/imgui.cpp",
    }, &.{
        "-std=c++20",
        "-Wall",
        "-fno-exceptions",
        "-fno-rtti",
        "-g",
    });
    viewer.defineCMacro("WITH_RIVE_TOOLS", null);
    viewer.defineCMacro("RIVE_RENDERER_TESS", null);
    viewer.defineCMacro("SOKOL_GLCORE33", null);
    viewer.defineCMacro("DEBUG", null);
    viewer.install();
}
